{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,MAAOJ,SAASC,cAAc,oBAoC9B,SAASI,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxCjBT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAsBC,GAClBA,EAAEC,iBAEF,MAAMf,GAAcJ,EAAKI,WAAWgB,MAC9BC,GAAarB,EAAKK,UAAUe,MAC5BE,GAAetB,EAAKM,MAAMc,MAEhC,IAAIG,EAAenB,EAInB,IAAK,IAAIoB,EAAQ,EAAGA,GAASF,EAAaE,IACxCjB,EAAciB,EAAOD,GACpBE,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,QAAQC,IAAI,uBAAqBnB,QAAiBC,OAClDX,EAAA8B,OAAOC,QAAQ,qBAAqBrB,QAAeC,MAAU,IAE9DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBiB,QAAQC,IAAI,sBAAoBnB,QAAeC,OAC/CX,EAAA8B,OAAOG,QAAQ,oBAAoBvB,QAAeC,MAAU,IAG/DuB,SAAQ,KAAWR,IAAUF,GAAatB,EAAKC,KAAKgC,OAAO,IAC5DV,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio'\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\n\nconst refs = {\n  form: document.querySelector(`.form`),\n  firstDelay: document.querySelector(`[name=\"delay\"]`),\n  stepDelay: document.querySelector(`[name=\"step\"]`),\n  amout: document.querySelector(`[name=\"amount\"]`),\n}\n// console.log(refs);\n\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e)  {\n    e.preventDefault();\n    // const { delay, step, amount } = e.currentTarget.elements;\n    const firstDelay = +refs.firstDelay.value;\n    const stepValue = +refs.stepDelay.value;\n    const amountValue = +refs.amout.value;\n\n    let promiseDelay = firstDelay;\n  \n    // const promises = [];\n  \n    for (let index = 1; index <= amountValue; index++) {\n      createPromise(index, promiseDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n\n    .finally(() => { if(index === amountValue) refs.form.reset()})\n    promiseDelay += stepValue;\n\n  }\n  };\n\n\n  function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    }\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","stepDelay","amout","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","value","stepValue","amountValue","promiseDelay","index","then","console","log","Notify","success","catch","failure","finally","reset"],"version":3,"file":"03-promises.4320c9a5.js.map"}